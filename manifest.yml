apiVersion: v1
kind: Namespace
metadata:
  name: n-PROJECT_NAME
---

apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    deployment.kubernetes.io/revision: "17"
  generation: 26
  name: d-PROJECT_NAME
  namespace: n-PROJECT_NAME
spec:
  progressDeadlineSeconds: 600
  replicas: 2
  revisionHistoryLimit: 10
  selector:
    matchLabels:
      workload.user.cattle.io/workloadselector: apps.deployment-n-PROJECT_NAME-d-PROJECT_NAME
  strategy:
    rollingUpdate:
      maxSurge: 25%
      maxUnavailable: 25%
    type: RollingUpdate
  template:
    metadata:
      labels:
        POD_LABEL
        workload.user.cattle.io/workloadselector: apps.deployment-n-PROJECT_NAME-d-PROJECT_NAME
    spec:
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
            - matchExpressions:
              - key: env
                operator: In
                values:
                - dev
      serviceAccountName: sa-image-pull-secret
      containers:
      - image: REGISTRY/PROJECT_NAME:TAG
        imagePullPolicy: Always
        name: d-PROJECT_NAME
        readinessProbe:
          failureThreshold: 3
          httpGet:
            path: /
            port: PORT
            scheme: HTTP
          initialDelaySeconds: 5
          periodSeconds: 5
          successThreshold: 1
          timeoutSeconds: 1
        resources: {}
        terminationMessagePath: /dev/termination-log
        terminationMessagePolicy: File
        volumeMounts:
        - mountPath: /etc/localtime
          name: v-localtime
          readOnly: true
        - mountPath: /mnt
          name: v-PROJECT_NAME
      dnsPolicy: ClusterFirst
      restartPolicy: Always
      schedulerName: default-scheduler
      securityContext: {}
      terminationGracePeriodSeconds: 30
      volumes:
      - hostPath:
          path: /usr/share/zoneinfo/Asia/Ho_Chi_Minh
          type: File
        name: v-localtime
      - name: v-PROJECT_NAME
        persistentVolumeClaim:
          claimName: pvc-PROJECT_NAME

---
apiVersion: v1
kind: Service
metadata:
  name: s-PROJECT_NAME
  namespace: n-PROJECT_NAME
  annotations:
    cloud.google.com/backend-config: '{"ports": {"PORT":"bc-c-gke-dev"}}'
spec:
  ports:
  - name: port-react
    port: PORT
    protocol: TCP
    targetPort: PORT
  selector:
    POD_LABEL
  sessionAffinity: None
  type: ClusterIP
---
  apiVersion: networking.k8s.io/v1beta1
  kind: Ingress
  metadata:
    name: i-PROJECT_NAME
    namespace: n-PROJECT_NAME
    annotations:
      kubernetes.io/ingress.global-static-ip-name: "public-static-ip-for-ingress-PROJECT_NAME"
  spec:
    rules:
    - host: PUBLIC_DOMAIN
      http:
        paths:
        - backend:
            service:
              name: s-PROJECT_NAME
              port:
                number: PORT
          path: /
          pathType: Prefix

---
apiVersion: v1
kind: PersistentVolume
metadata:
  labels:
    cattle.io/creator: norman
  name: pv-PROJECT_NAME
spec:
  accessModes:
  - ReadWriteMany
  capacity:
    storage: 2Gi
  nfs:
    path: /
    server: s-nfs-server.n-PROJECT_NAME.svc.cluster.local
  nodeAffinity:
    required:
      nodeSelectorTerms:
      - matchExpressions:
        - key: env
          operator: In
          values:
          - dev
  volumeMode: Filesystem
---

apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: pvc-PROJECT_NAME
  namespace: n-PROJECT_NAME
spec:
  accessModes:
  - ReadWriteMany
  resources:
    requests:
      storage: 2Gi
  storageClassName: ""
  volumeMode: Filesystem
  volumeName: pv-PROJECT_NAME

